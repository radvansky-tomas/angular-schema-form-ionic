angular.module("schemaForm").run(["$templateCache",function(e){e.put("decorators/ionic/checkbox.html",'<label for="{{form.key.slice(-1)[0]}}" class="item item-checkbox schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><div class="checkbox checkbox-input-hidden disable-pointer-events"><input sf-field-model="" type="checkbox" sf-changed="form" ng-disabled="form.readonly" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}" aria-label="{{form.title}}"> <i class="checkbox-icon"></i></div><div class="item-content disable-pointer-events {{form.labelHtmlClass}}">{{form.title}}</div><p class="form-error {{form.errorClass}}" sf-message="form.description"></p></label>'),e.put("decorators/ionic/default.html",'<label for="{{form.key.slice(-1)[0]}}" class="item item-input schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><span ng-show="showTitle()" class="input-label {{form.labelHtmlClass}}" sf-field-model="replaceAll" ng-model="$$value$$" ng-class="{\'has-input\': $$value$$}">{{form.title}}</span><div ng-if="form.accessory" layout="row"><input sf-field-model="" ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" id="{{form.key.slice(-1)[0]}}" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span class="{{form.accessoryClass}}">{{form.accessory}}</span></div><input ng-if="form.accessory == undefined" sf-field-model="" ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" id="{{form.key.slice(-1)[0]}}" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"><p class="form-error {{form.errorClass}}" sf-message="form.description"></p></label>'),e.put("decorators/ionic/fieldset.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><div ng-show="showTitle()" class="item item-divider">{{ form.title }}</div><p class="help-block {{form.errorClass}}" ng-show="form.description" ng-bind-html="form.description"></p></fieldset>'),e.put("decorators/ionic/grid-select.html",'<div sf-field-model="sf-new-array" sf-new-array="" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{::form.labelHtmlClass}}" sf-field-model="" schema-validate="form" ng-show="showTitle()">{{form.title}}</label><ion-list layout="{{form.layoutHtmlClass}}" ng-repeat="item in form.titleMap track by $index"><ion-checkbox self="{{form.selfHtmlClass}}" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-model="titleMapValues[$index]" name="{{fieldId(true, false)}}"><div bind-html-compile="form.template"></div></ion-checkbox></ion-list><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></div>'),e.put("decorators/ionic/radios.html",'<div class="list schema-form-radios {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="item item-radio" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" sf-field-model="" ng-value="item.value" name="{{form.key.join(\'.\')}}"><div class="radio-content"><div class="item-content disable-pointer-events {{form.labelHtmlClass}}" ng-bind-html="item.name"></div><i class="radio-icon disable-pointer-events icon ion-checkmark"></i></div><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></label></div>'),e.put("decorators/ionic/range.html",'<label for="{{form.key.slice(-1)[0]}}" class="item item-input range range-positive schema-form-range {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><div ng-show="showTitle()" class="input-label {{form.labelHtmlClass}}">{{form.title}}</div><input custom-range="" step="$$value$$.step" value="$$value$$.value" desc="$$value$$.desc" map="form.titleMap" sf-field-model="replaceAll" ng-model="$$value$$.step" sf-changed="form" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" min="{{form.min}}" max="{{form.max}}" type="range"> <input style="max-width: 50px; text-align: center; background-position: bottom" type="text" maxlength="3" ng-disabled="true" sf-field-model="replaceAll" ng-model="$$value$$.value"> <span sf-field-model="replaceAll" ng-model="$$value$$.desc" model-to-html=""></span><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></label>'),e.put("decorators/ionic/section.html",'<div layout="{{form.fieldHtmlClass}}" self="{{form.labelHtmlClass}}" class="schema-form-section {{::form.htmlClass + \' \' + idClass}}" sf-key-controller="" sf-parent-key="[{{form.key.join(\'][\')}}]" sf-index="{{$index}}"></div>'),e.put("decorators/ionic/select.html",'<label for="{{form.key.slice(-1)[0]}}" class="item item-input item-select schema-form-select {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><div ng-show="showTitle()" class="input-label {{form.labelHtmlClass}}">{{form.title}}</div><select ng-if="form.multiple" multiple="" sf-field-model="" sf-changed="form" id="{{form.key.slice(-1)[0]}}" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-options="item.value as item.name group by item.group for item in form.titleMap"></select><select ng-if="form.multiple == undefined" sf-field-model="" sf-changed="form" id="{{form.key.slice(-1)[0]}}" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" ng-options="item.value as item.name group by item.group for item in form.titleMap"></select><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></label>'),e.put("decorators/ionic/separator.html",'<div layout="{{form.fieldHtmlClass}}" self="{{form.labelHtmlClass}}" class="schema-form-separator item item-divider {{::form.htmlClass + \' \' + idClass}}" sf-key-controller="" ng-show="showTitle()">{{ form.title }}</div>'),e.put("decorators/ionic/submit.html",'<div class="form-group schema-form-submit {{form.htmlClass}}"><button class="button {{form.style}} {{form.fieldHtmlClass}}" type="{{form.type}}" ng-disabled="form.readonly" aria-label="{{form.title}}">{{form.title}}</button></div>'),e.put("decorators/ionic/textarea.html",'<label for="{{form.key.slice(-1)[0]}}" class="item item-input schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><span ng-show="showTitle()" class="input-label {{form.labelHtmlClass}}" sf-field-model="replaceAll" ng-model="$$value$$" ng-class="{\'has-input\': $$value$$}">{{form.title}}</span> <textarea sf-field-model="" sf-changed="form" placeholder="{{form.placeholder}}" id="{{form.key.slice(-1)[0]}}" ng-class="form.fieldHtmlClass" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}">\n  </textarea><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></label>'),e.put("decorators/ionic/toggle.html",'<div class="item item-toggle schema-form-toggle {{form.htmlClass}}" ng-class="{\'has-error\': hasError(), \'has-success\': hasSuccess(), \'has-feedback\': form.feedback !== false}"><div class="{{form.labelHtmlClass}}">{{form.title}}</div><label for="{{form.key.slice(-1)[0]}}" class="toggle"><input sf-field-model="" type="checkbox" sf-changed="form" ng-disabled="form.readonly" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}" aria-label="{{form.title}}"><div class="track"><div class="handle"></div></div></label><p class="help-block {{form.errorClass}}" sf-message="form.description"></p></div>')}]),angular.module("schemaForm").config(["schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,l,s){var a="decorators/ionic/",r=l.builders.simpleTransclusion,o=l.builders.ngModelOptions,t=l.builders.ngModel,i=l.builders.sfField,m=l.builders.condition,c=function(e){if(e.form.placeholder){var l=e.fieldFrag.querySelector("select"),l=e.fieldFrag.querySelector("select"),s=document.createElement("option");s.setAttribute("value",""),s.setAttribute("sf-field-model","replaceAll"),1===angular.version.major&&angular.version.minor<4?s.setAttribute("ng-if","$$value$$ === undefined"):s.setAttribute("ng-show","$$value$$ === undefined"),s.textContent=e.form.placeholder,l.appendChild(s)}},f=[i,t,o,m];e.defineDecorator("ionicDecorator",{textarea:{template:a+"textarea.html",builder:f},fieldset:{template:a+"fieldset.html",builder:[i,r,m]},checkbox:{template:a+"checkbox.html",builder:f},select:{template:a+"select.html",builder:[c,i,t,o,m]},submit:{template:a+"submit.html",builder:f},button:{template:a+"submit.html",builder:f},radios:{template:a+"radios.html",builder:f},toggle:{template:a+"toggle.html",builder:f},"default":{template:a+"default.html",builder:f},section:{template:a+"section.html",builder:[i,r,m]},range:{template:a+"range.html",builder:f},gridSelect:{template:a+"grid-select.html",builder:f},separator:{template:a+"separator.html",builder:f}},[])}]),angular.module("schemaForm").directive("stringToNumber",function(){return{scope:!1,require:"ngModel",link:function(e,l,s,a){var r=e.$watch(s.stringToNumber,function(e){if(e){var l=e.type.indexOf("number")!==-1,s=e.type.indexOf("integer")!==-1,o=/^[0-9]*$/;(l||s)&&a.$parsers.push(function(e){var s;return l?s=parseFloat(e):o.test(e)&&(s=parseInt(e,10)),console.log("parser",o.test(e),e,s),void 0===s||isNaN(s)?e:s}),r()}})}}}),angular.module("schemaForm").directive("modelToHtml",function(){return{require:"ngModel",link:function(e,l,s,a){e.$watch(function(){return a.$modelValue},function(e){l[0].innerHTML=e})}}}),angular.module("schemaForm").directive("bindHtmlCompile",["$compile",function(e){return{restrict:"A",link:function(l,s,a){l.$watch(function(){return l.$eval(a.bindHtmlCompile)},function(r){s.html(r&&r.toString());var o=l;a.bindHtmlScope&&(o=l.$eval(a.bindHtmlScope)),e(s.contents())(o)})}}}]),angular.module("schemaForm").directive("customRange",function(){return{scope:{step:"=",value:"=",desc:"=",map:"="},link:function(e,l,s,a){e.$watch(function(){return e.step},function(l){if(void 0!=e.map&&void 0!=l){var s=parseInt(l);if(!isNaN(s)){var a=e.map[s];if(void 0!=a)return e.value=a.value,void(e.desc=a.name)}}e.value=e.step})}}});